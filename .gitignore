# Ignore the files and folders according to the following list
# Doku: https://git-scm.com/docs/gitignore
#
# bar/      # matches the folder bar (tailing /)
# *.dll     # matches all dlls
# !foo.dll  # except for foo.dll
# **/foo    # matches file or directory "foo" anywhere
# abc/**    # matches all files inside directory "abc
# a/**/b"   # matches "a/b", "a/x/b", "a/x/y/b" and so on
#
# after changing this file, update the tracked file as follows
#$ git rm -r --cached .
#$ git add .
#$ git commit -m 'Update .gitignore'
#$ git push


# Special subfolders or files  #
# folder names end with a "/"  # 
################################
#experiments/
tmp/
__*/
*_old


# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.app
*.war
*.[oa]
*.so
*.py[cod]
*$py.class
*~
__pycache__/


# Jupyter notebooks #
#####################
.ipynb_checkpoints
*/.ipynb_checkpoints/*.ipynb

# IDE #
#######
# for PyCharm
.idea/
# for VScode
.vscode/
*.code-workspace


# Environments #
################
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/


# Packages #
############
# check whether it is better for you 
# to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip


# Logs and databases #
######################
*.log
*.sql
*.sqlite
*.db


# OS generated files #
######################
.DS_Store
.DS_Store?
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
.~*
._*
~$*


# Documentation #
#################
# Sphinx
docs/build/
# mkdocs
/site


# Distribution / packaging #
############################
.Python
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
# PEP 582 - used by e.g. github.com/David-OConnor/pyflow
__pypackages__/


# Node artifact files
node_modules/

# PyInstaller #
###############
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec


# Installer logs #
##################
pip-log.txt
pip-delete-this-directory.txt


# Unit test / coverage reports #
################################
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/


# Translations #
################
*.mo
*.pot


# Flask stuff #
###############
instance/
.webassets-cache

# Scrapy stuff #
################
.scrapy

# PyBuilder #
#############
target/

# IPython #
###########
profile_default/
ipython_config.py

# pyenv #
#########
.python-version

# pipenv #
##########
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# mypy #
########
.mypy_cache/
.dmypy.json
dmypy.json

# Celery stuff #
################
celerybeat-schedule
celerybeat.pid

# SageMath parsed files #
#########################
*.sage.py

# Spyder project settings #
###########################
.spyderproject
.spyproject

# Rope project settings #
#########################
.ropeproject

# Pyre type checker #
#####################
.pyre/

# Unit test reports
TEST*.xml

# Large media files
*.mp4
*.tiff
*.avi
*.flv
*.mov
*.wmv